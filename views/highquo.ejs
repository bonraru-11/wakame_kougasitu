<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <title><%= videoTitle %></title>
  <meta name="description" content="わかめ">
  <meta property="og:site_name" content="わかめtube | まっしろ">
  <meta name="theme-color" content="#ff8181">
  <link rel="shortcut icon" href="/logo.png">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="author" content="わかめtube | まっしろ">
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/font.css">
  <link rel="stylesheet" href="/css/plyr.css">
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/slide.css">
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  <script src="/js/bootstrap.min.js"></script>
</head>

<body>
<header>
  <div class="banner">
   <button class="btn btn-link" onclick="window.location.href='/'">ホーム🏠</button>
   <button class="btn btn-link" onclick="window.location.href='/blog'">お知らせ</button>
   <form class="d-flex" action="/s">
    <input type="text" name="q" class="form-control" placeholder="キーワードを入力..." required>
   </form>
    <button class="btn btn-link" id="menu-btn" style="position: absolute; right: 10px;">ツール</button>
 </div>
</header>
<nav id="side-menu" class="side-menu">
    <ul>
        </label></li>
        <li><a href="/ll/<%= videoId %>">音のみで再生する</a></li>
        <li><a href="/vi/<%= videoId %>/maxresdefault.jpg" target="_blank">サムネイルをダウンロード</a></li>
        <li><a href="/wakamehistory">再生履歴</a></li>
    </ul>
</nav>
<div id="overlay" class="overlay"></div>
<div class="card">
    <audio id="audio" controls>
        <source src="<%= audioUrl %>">
    </audio>
  <video controls autoplay preload="auto" id="video" poster="/vi/<%= videoId %>/maxresdefault.jpg">
    <source src="<%= stream_url %>" type="video/mp4">
    読み込み失敗。ブラウザをアップデートしてどうぞ。
  </video>
  </div>
<div class="card">
  <div class="toolcard-header">
    <small class="text-muted">音が流れない場合、再生を一時停止してもう一度再生してみて下さい。</small>
  </div>
  <div class="toolcard-header">
    <small class="text-muted">ツール　<button id="reloadButton">動画を再読み込み</button></small>
  </div>
  <div class="card-channel">
    <div class="container">
    <a href="/c/<%= channelId %>">
    <img src="<%= channelImage %>" alt="画像">
    <%= channelName %>
    </a>
    </div>
  </div>
  <div class="toolcard-header">
    <small class="text-muted"></small>
    <small class="text-muted float-right"><%= videoViews %>回再生</small>
  </div>
  <div class="card-body">
    <h5><%= videoTitle %></h5>
      <p><%- (videoDes || "").replace(/\n/g, "<br>") %></p>
  </div>
</div>
  <div class="comment-box">
    <h2>コメント</h2>
    <div class="iframe-container">
      <iframe src="/comment/<%= videoId %>" scrolling="yes"></iframe>
    </div>
  </div>
    <br>
  <div class="tube-box">
    <div class="iframe-container">
<iframe src="https://wakamecomment.glitch.me/wakamerhigh/<%= videoId %>" scrolling="yes"></iframe>
    </div>
  </div>
<style>
	* {
		--plyr-color-main: #ff8181;
	}

	a {
		color: #ff8181;
	}
  .card {
  border: 1px solid #ccc;
  border-radius: 10px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  margin: 15px;
  overflow: hidden;
  transition: all 0.3s ease;
}

.card:hover {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.card-header, .card-footer {
  background-color: #f8f9fa;
  padding: 10px 15px;
  border-bottom: 1px solid #ddd;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
  
.card-channel {
  padding: 7px;
  height: 49px;
}
.card-channel p{
  margin-left: 65px;
}

.card-body {
  padding: 15px;
}

.card-body h5 {
  margin-bottom: 10px;
}

.card-body p {
  margin: 0;
  white-space: pre-line;
}
video {
  width: 100%;
  height:auto
  }
.toolcard-header {
  background-color: #FFF5F7;
  padding: 10px 10px;
  border-bottom: 0.5px solid #f8e58c;
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 30px;
}
        .container {
            height: 35px;
            display: flex;
            align-items: center;
        }

        .container img {
            width: 35px;
            height: 35px;
        }

        .container .text {
            margin-left: 10px;
        }
    .comment-box {
      background-color: #ffffff;
      width: 85%;
      border-radius: 10px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      padding: 20px;
      text-align: left;
      box-sizing: border-box;
    }

    .comment-box h2 {
      margin: 0 0 10px;
      font-size: 24px;
      color: #333;
    }

    .iframe-container {
      width: 100%;
      height: 900px;
      border: none;
      overflow: hidden;
      border-radius: 10px;
      box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    iframe {
      width: 100%;
      height: 100%;
      border: none;
    }
    .tube-box {
      background-color: #ffffff;
      width: 100%;
      border-radius: 10px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      padding: 20px;
      text-align: left;
      box-sizing: border-box;
  }
    #audio {
        display: none;
    }
</style>
    <script>
  const menuBtn = document.getElementById('menu-btn');
const sideMenu = document.getElementById('side-menu');
const overlay = document.getElementById('overlay');

function toggleMenu() {
    sideMenu.classList.toggle('open');
    overlay.classList.toggle('active');
}

menuBtn.addEventListener('click', toggleMenu);

overlay.addEventListener('click', toggleMenu);
      
        const video = document.getElementById('video');
        const audio = document.getElementById('audio');

        video.addEventListener('loadedmetadata', () => {
            video.play().catch(error => {
                console.error("動画の再生エラー:", error);
            });
        });

        video.addEventListener('play', () => {
            audio.play().catch(error => {
                console.error("オーディオの再生エラー:", error);
            });
        });

        video.addEventListener('pause', () => {
            audio.pause();
            audio.currentTime = video.currentTime;
        });

        video.addEventListener('ended', () => {
            audio.pause();
            audio.currentTime = 0; 
        });
      
        video.addEventListener('seeked', () => {
            video.pause();
            audio.pause();
            audio.currentTime = video.currentTime;
            video.play();
            audio.play();
        });
      
        video.addEventListener('timeupdate', () => {
            if (Math.abs(video.currentTime - audio.currentTime) > 0.5) {
                audio.currentTime = video.currentTime;
            }
        });

        syncButton.addEventListener('click', () => {
            video.pause();
            audio.pause();
            audio.currentTime = video.currentTime;
        });
      

      
document.getElementById('reloadButton').addEventListener('click', function() {
    const video = document.getElementById('video');
    const audio = document.getElementById('audio');
    
    video.load();
    audio.load();
});
      
window.addEventListener('load', () => {
  wakaload();
  setInterval(wakaload, 3 * 60 * 1000);
});
  
function wakaolad() {
      fetch('/st')
        .then(response => console.log('Keep-alive request sent'))
        .catch(error => console.error('Error sending keep-alive request:', error));
}
      
//サジェスト
  $(function () {
    $('#searchbox').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '/suggest',
                data: { keyword: request.term },
                success: function (data) {
                    response(data);
                }
            });
        },
        delay: 1,
        select: function (event, ui) {
            $('#searchbox').val(ui.item.value);
            $('form').submit();
        }
    });
});
      
  //info整理
const videoId = "<%= videoId %>";
const channelId = "<%= channelId %>";
const channelName = "<%= channelName %>";
const videoTitle = "<%= videoTitle %>";

document.addEventListener('DOMContentLoaded', () => {
    saveToHistory(videoId, channelId, channelName, videoTitle);
});

//履歴保存
function saveToHistory(videoId, channelId, channelName, videoTitle) {
    let history = getHistoryFromCookies();

    const historyIndex = history.findIndex(track => track.videoId === videoId);

    if (historyIndex !== -1) {
        history.splice(historyIndex, 1);
    }

    if (history.length >= 10) {
        history.shift();
    }

    history.push({ videoId, channelId, channelName, videoTitle });

    document.cookie = `wakametubehistory=${encodeURIComponent(JSON.stringify(history))}; path=/; max-age=31536000`;
}

function getHistoryFromCookies() {
    const historyCookie = document.cookie.split('; ').find(row => row.startsWith('wakametubehistory='));
    if (historyCookie) {
        const cookieValue = historyCookie.split('=')[1];
        try {
            return JSON.parse(decodeURIComponent(cookieValue));
        } catch (error) {
            console.error('Error parsing history cookie:', error);
            return [];
        }
    }
    return [];
}
    </script>
  </body>
</html>